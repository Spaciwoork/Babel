#include <QtWidgets>
#include <iostream>
#include <QtNetwork>
#include "../include/client.hpp"

Client::Client(QString server_v, int port_v, QWidget *parent)
{
    in.setDevice(&tcpSocket);
    in.setVersion(QDataStream::Qt_4_0);
    connect(&tcpSocket, &QIODevice::readyRead, this, &Client::read);
    server = server_v;
    port = port_v;
}

void Client::setConnection(QString server_v, int port_v)
{
	server = server_v;
	port = port_v;
}

void Client::Connection()
{
	tcpSocket.abort();
	tcpSocket.connectToHost(server, port);
}

void Client::read()
{

	qint64 maxLen = 4096;
	std::pair<char *, int> line;
	
	while (1){
		line.first = new char[maxLen];
		line.second = tcpSocket.read(line.first, maxLen);
		if (line.second <= 0){
			std::cout << "end" << std::endl;
			return ;
		}
		else {
			std::cout << line.first << std::endl;
			std::cout << line.second << std::endl;
			std::cout << "ok" << std::endl;
		}
	}
}

void Client::writeData(void *data, size_t size)
{
	tcpSocket.write((const char *)data, size);
}

void Client::close()
{
	tcpSocket.disconnectFromHost();
        tcpSocket.waitForDisconnected();
}
